generator client {
  provider = "prisma-client-js"
}

generator comments {
  provider                  = "prisma-db-comments-generator"
  ignorePattern             = "_view$"
  includeEnumInFieldComment = true
}

generator fabbrica {
  provider = "prisma-fabbrica"
  output   = "../test/__generated__/fabbrica"
  tsconfig = "../tsconfig.json"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CustomerType {
  PERSONAL
  CORPORATE

  @@map("customer_types")
}

/// Customer
model Customer {
  /// Customer ID
  customerId Int          @id @default(autoincrement()) @map("customer_id")
  /// Customer Name
  name       String
  /// e-mail
  email      String       @unique
  /// Customer Type
  type       CustomerType
  createdAt  DateTime     @default(dbgenerated("statement_timestamp()")) @map("created_at") @db.Timestamptz()
  sales      Sale[]

  @@map("customers")
}

/// Product
model Product {
  /// Product ID
  productId   Int      @id @default(autoincrement()) @map("product_id")
  /// Product Name
  name        String
  /// Product Description
  description String?
  /// Price
  price       Float
  createdAt   DateTime @default(dbgenerated("statement_timestamp()")) @map("created_at") @db.Timestamptz()
  sales       Sale[]

  @@map("products")
}

model Sale {
  /// Sale ID
  saleId     Int      @id @default(autoincrement()) @map("sale_id")
  customer   Customer @relation(fields: [customerId], references: [customerId])
  /// Customer ID
  customerId Int      @map("customer_id")
  product    Product  @relation(fields: [productId], references: [productId])
  /// Product ID
  productId  Int      @map("product_id")
  /// Quantity
  quantity   Int
  /// Total Price
  totalPrice Float    @map("total_price")
  createdAt  DateTime @default(dbgenerated("statement_timestamp()")) @map("created_at") @db.Timestamptz()

  @@map("sales")
}
